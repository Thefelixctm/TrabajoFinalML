# pages/comparacion.py 
import streamlit as st
import os
from PIL import Image
import subprocess
import time

# --- Configuraci칩n de la p치gina ---
st.set_page_config(
    page_title="Gr치ficos y Demos",
    page_icon="游늵",
    layout="wide"
)

# --- L칍GICA DE RUTAS INFALIBLES ---
PAGE_DIR = os.path.dirname(os.path.abspath(__file__))
ROOT_DIR = os.path.dirname(PAGE_DIR)
SQHN_DIR = os.path.join(ROOT_DIR, "SQHN")
MAIN_SCRIPT_PATH = os.path.join(SQHN_DIR, "main.py")
PLOTS_OUTPUT_FOLDER = os.path.join(SQHN_DIR, "plots")
RESULTS_FOLDER = os.path.join(SQHN_DIR, "results")
# <-- NUEVO: Ruta a la carpeta de recursos est치ticos
ASSETS_FOLDER = os.path.join(SQHN_DIR, "assets")

# Asegurarse de que la carpeta de salida para los gr치ficos exista
os.makedirs(PLOTS_OUTPUT_FOLDER, exist_ok=True)

# --- HERRAMIENTA DE DEPURACI칍N DE ARCHIVOS ---
with st.expander("游댌 Haz clic aqu칤 para ver la estructura de archivos del servidor"):
    st.write("Directorio Ra칤z del Proyecto:")
    # Muestra el contenido del directorio ra칤z
    try:
        root_content = os.listdir(os.path.dirname(os.path.abspath(__file__)))
        st.code('\n'.join(root_content))
    except Exception as e:
        st.error(f"No se pudo leer el directorio ra칤z: {e}")
        
    st.write("Contenido de la carpeta SQHN/results/:")
    # Muestra el contenido de la carpeta de resultados
    results_path_debug = os.path.join(os.path.dirname(os.path.abspath(__file__)), '..', 'SQHN', 'results')
    try:
        results_content = os.listdir(results_path_debug)
        if results_content:
            st.code('\n'.join(results_content))
        else:
            st.warning("춰La carpeta 'results' est치 vac칤a!")
    except FileNotFoundError:
        st.error("춰ERROR CR칈TICO! La carpeta 'SQHN/results' no existe en el servidor.")
    except Exception as e:
        st.error(f"No se pudo leer la carpeta 'results': {e}")

# --- Contenido de la P치gina ---
st.title("游늵 Panel de Visualizaci칩n de Resultados")
st.markdown("---")

# --- Secci칩n 1: Gr치ficos del Experimento Principal ---
st.header("1. Gr치ficos de Rendimiento del Experimento `OnCont-L1`")
st.markdown("""
    Haz clic en el bot칩n para ejecutar el script `plot.py` y generar los gr치ficos
    comparativos del experimento principal. Este proceso lee los archivos `.data`
    pre-calculados de la carpeta `SQHN/results/`.
    """)

# Lista de los gr치ficos del experimento principal
expected_charts = [
    {"file": "OnCont_L1_Continual.png", "title": "Rendimiento Continual (M칠trica L1)", "description": "Muestra la evoluci칩n del rendimiento en un escenario de aprendizaje continuo."},
    {"file": "OnCont_L1_Final_Performance.png", "title": "Rendimiento Final Global (M칠trica L1)", "description": "Resume el rendimiento final de cada modelo una vez completados los procesos."},
    {"file": "OnCont_L1_Sensitivity.png", "title": "An치lisis de Sensibilidad (M칠trica L1)", "description": "Explora c칩mo el rendimiento var칤a frente a cambios en par치metros clave."}
]


if st.button("Generar Gr치ficos del Experimento Principal"):
    if not os.path.exists(RESULTS_FOLDER) or not os.listdir(RESULTS_FOLDER):
        st.error("Error: La carpeta 'SQHN/results' est치 vac칤a.")
    else:
        with st.spinner("Generando los tres gr치ficos..."):
            try:
                process = subprocess.run(
                    ["python", "main.py", "--plot", "OnCont-L1"],
                    capture_output=True,
                    text=True,
                    check=True,
                    cwd=SQHN_DIR 
                )

                st.success("춰Proceso de generaci칩n de gr치ficos completado!")
                time.sleep(1)

                # --- L칍GICA DE VISUALIZACI칍N MEJORADA CON T칈TULOS Y DESCRIPCIONES ---
                st.subheader("Resultados del Experimento Principal")
                
                # Mostramos cada gr치fico con su t칤tulo y descripci칩n
                for chart in expected_charts:
                    chart_path = os.path.join(PLOTS_OUTPUT_FOLDER, chart["file"])
                    if os.path.exists(chart_path):
                        st.markdown(f"#### {chart['title']}") # <-- Usamos un sub-subt칤tulo para el t칤tulo
                        image = Image.open(chart_path)
                        # <-- Usamos el par치metro 'caption' para la descripci칩n
                        st.image(image, caption=chart["description"], use_column_width=True) 
                        st.markdown("---")
                    else:
                        st.warning(f"No se encontr칩 el archivo del gr치fico: {chart['file']}")

            except subprocess.CalledProcessError as e:
                st.error("Error al ejecutar el script de ploteo.")
                st.expander("Ver detalles del error").code(e.stderr, language='bash')
            except Exception as e:
                st.error(f"Ocurri칩 un error inesperado: {e}")

st.markdown("---")

# --- Secci칩n 2: Demostraci칩n Visual de Memoria "One-Shot" ---
st.header("2. Demostraci칩n Visual: Memoria 'One-Shot' (Fortaleza del SQHN)")

# --- L칍GICA DE BARRA DESPLEGABLE (st.expander) ---
with st.expander("Haz clic aqu칤 para ver la Demostraci칩n Visual"):
    st.markdown("""
        Esta imagen demuestra la capacidad del **SQHN** para actuar como una **memoria perfecta**.
        Para cada d칤gito, se cre칩 un modelo SQHN nuevo y se le ense침칩 esa 칰nica imagen.
        El resultado es una reconstrucci칩n n칤tida y de alto contraste, a diferencia del Autoencoder
        que, al haber sido entrenado con todas las im치genes, produce una versi칩n m치s generalista y suave.
        """)

    oneshot_demo_image_path = os.path.join(ASSETS_FOLDER, "demo_oneshot.png")

    if os.path.exists(oneshot_demo_image_path):
        image = Image.open(oneshot_demo_image_path)
        # --- L칍GICA DE TAMA칌O CONTROLADO (width=...) ---
        st.image(image, caption="Columna 1: Original, Columna 2: SQHN (Memoria Perfecta), Columna 3: Autoencoder (Generalista)", width=700)
    else:
        st.error("춰Archivo de imagen de demostraci칩n no encontrado!")
        st.warning(f"Aseg칰rate de que la imagen 'demo_oneshot.png' exista en la carpeta: {ASSETS_FOLDER}")
